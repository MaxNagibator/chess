@{
    ViewData["Title"] = "Chess";
}

@using Bg.Chess.Common.Enums

@model HistoryGameModel

<h2>
    Игра @Model.Id
</h2>


<div id="field2">

</div>

<script>
    let notation = '@Model.Positions';

    window.onload = function () {

        let notationParts = notation.split(' ');
        let pieceLocation = notationParts[0];
        let pieceLocationLines = pieceLocation.split('/');
        let cellColorIndex = 0;
        for (let i = 0; i < 8; i++) {
            let line = pieceLocationLines[i];
            var divLine = document.createElement('div');
            divLine.classList.add('line');
            target.appendChild(divLine);
            var posX = 0;
            for (let posIndex = 0; posIndex < line.length; posIndex++) {
                var posY = 7 - i;
                let pos = line[posIndex];
                var emptyFields = pos * 1;
                if (Number.isInteger(emptyFields)) {
                    for (let cellsCount = emptyFields; cellsCount > 0; cellsCount--) {
                        // todo обобщить с дублированием снизу
                        var div = document.createElement('div');
                        div.classList.add('column');
                        if (cellColorIndex % 2 === 0) {
                            div.classList.add('position-white');
                        } else {
                            div.classList.add('position-black');
                        }
                        div.setAttribute('data-position-x', posX);
                        div.setAttribute('data-position-y', posY);

                        divLine.appendChild(div);
                        dropZones.push(div);
                        cellColorIndex++;
                        posX++;
                    }

                } else {
                    var div = document.createElement('div');
                    divLine.appendChild(div);
                    div.classList.add('column');
                    if (cellColorIndex % 2 === 0) {
                        div.classList.add('position-white');
                    } else {
                        div.classList.add('position-black');
                    }
                    div.setAttribute('data-position-x', posX);
                    div.setAttribute('data-position-y', posY);Model

                    divLine.appendChild(div);
                    cellColorIndex++;
                    let piece = getPieceByNotation(pos);
                    var img = document.createElement('img');
                    var imgSrcName = piece.Type + "-" + piece.Side + '.png';
                    img.src = '/Content/Images/Piece/' + imgSrcName;
                    div.appendChild(img);
                    dropZones.push(div);
                    if (game.mySide == piece.Side) {
                        draggables.push(img);
                    }
                    posX++;
                }
            }

            cellColorIndex++;
            var target = document.querySelector("#field2");
        }
    }
</script>
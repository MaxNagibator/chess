@{
    ViewData["Title"] = "Chess";
}

@using Bg.Chess.Common.Enums

@model Bg.Chess.Web.Models.HistoryGameModel


<h2>
    Игра @Model.Id
    <br />
    @Model.WhitePlayer.Name VS @Model.BlackPlayer.Name
</h2>

<div id="field2" class="game-field" style="display: inline-block;">

</div>
<div id="historyBlock" class="history-block history">
    @foreach(var move in Model.Moves)
    {
        var info = move.From.X + "/" + move.From.Y + " -> " + move.To.X + "/" + move.To.Y;
    <div>
        @info
    </div>
    }
</div>

<script src="~/js/fields.js" asp-append-version="true"></script>
<script>
    window.onload = function () {
        let game = {
            notation: '@Model.Positions',
            mySide: Side.Spectator,
            fieldWidth: @(Model.Positions.Split('/')[0].Length),
            fieldHeight: @(Model.Positions.Split('/').Length)
        };
        initField("field2", game);
    }
    let gameId = '@Model.Id';
</script>
@if(Model.FinishReason == null)
{
<script>
    let gameIsFinish = false;
    function goGame(alwaysCallback) {
        SendRequest({
            url: '/HistoryData/'+gameId,
            body: {
                gameId: gameId
            },
            method: 'GET',
            success: function (data) {
                let data2 = JSON.parse(data.responseText);
                initGame(data2);
            },
            always: function () {
                if (alwaysCallback != undefined) {
                    alwaysCallback();
                }
            }
        });
    }
    function initGame(data2) {
        game = {
            mySide: Side.Spectator,
        };
        game.notation = data2.notation;
        game.fieldWidth = data2.fieldWidth;
        game.fieldHeight = data2.fieldHeight;
        initField("field2", game);
    }

    let checkEnemyStepInProcess = false;;

    function CheckGame() {
        if (gameIsFinish) {
            return;
        }

        if (checkEnemyStepInProcess) {
            return;
        }

        checkEnemyStepInProcess = true;

        goGame(function () {
            checkEnemyStepInProcess = false;
        });
    }

    window.onload = function () {
        CheckGame();
        setInterval(function () {
            CheckGame();
        }, 5000);
    }
</script>
}